{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book/book.component.ts","webpack:///src/app/book/book.component.html","webpack:///src/app/card.component.ts","webpack:///src/app/child.component.ts","webpack:///src/app/contact-detail/contact-detail.component.ts","webpack:///src/app/contact-detail/contact-detail.component.html","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/contacts/contacts.module.ts","webpack:///src/app/ip.component.ts","webpack:///src/app/ip.service.ts","webpack:///src/app/learn-pipe/learn-pipe.component.ts","webpack:///src/app/learn-pipe/learn-pipe.component.html","webpack:///src/app/list-person/list-person.component.ts","webpack:///src/app/list-person/list-person.component.html","webpack:///src/app/log-in/log-in.component.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/paren.component.ts","webpack:///src/app/person/person.component.ts","webpack:///src/app/person/person.component.html","webpack:///src/app/project/project.component.ts","webpack:///src/app/project/project.component.html","webpack:///src/app/project/project.service.ts","webpack:///src/app/round.pipe.ts","webpack:///src/app/sign-in.component.ts","webpack:///src/app/sign-in.service.ts","webpack:///src/app/sign-up.component.ts","webpack:///src/app/struct/struct.component.ts","webpack:///src/app/struct/struct.component.html","webpack:///src/app/userform/userform.component.ts","webpack:///src/app/userform/userform.component.html","webpack:///src/app/weather/weather.component.ts","webpack:///src/app/weather/weather.component.html","webpack:///src/app/weather/weather.service.ts","webpack:///src/app/word/word.component.ts","webpack:///src/app/word/word.component.html","webpack:///src/app/words/words.component.ts","webpack:///src/app/words/words.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routesConfig","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","declarations","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","BookComponent","CardComponent","template","styles","ChildComponent","value","myclick","emit","ContactDetailComponent","ContactsComponent","routeConfig","ContactsModule","forChild","IpComponent","ipService","items","getIp","projects","err","console","log","getData","IpService","http","get","toPromise","res","json","resJson","LearnPipeComponent","birthday","Date","person","name","age","address","ListPersonComponent","arrPeople","index","findIndex","splice","LogInComponent","PageNotFoundComponent","ParentComponent","isAdd","myChild","onAddForChild","PersonComponent","removePerson","removeByClick","ProjectComponent","projectService","url","length","getAll","getAllProjects","ProjectService","subscribe","data","JSON","stringify","key","hasOwnProperty","push","projectName","RoundPipe","isUpper","Math","ceil","floor","SignInComponent","signInService","formSignIn","onSubmit","postToExpress","SignInService","headers","body","post","SignUpComponent","fb","formSignUp","group","email","required","password","subject","nodeJS","angular","reactJS","StructComponent","isShow","arrStruct","UserformComponent","isCircle","evenStyle","color","fontSize","oddStyle","currentClass","circle","square","WeatherComponent","weatherService","txtCityName","cityName","temp","isLoading","getTemp","alert","getWeather","WeatherService","main","WordComponent","en","vn","imageUrl","forgot","toggleForgot","WordsComponent","txtEn","txtVn","add","filterStatus","arrWords","memorized","colorRed","colorGreen","unshift","word","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,YAAY,GAAW,CAE3B;AAAEC,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAF2B,EAG3B;AAAED,UAAI,EAAE,EAAR;AAAYE,gBAAU,EAAE,WAAxB;AAAqCC,eAAS,EAAE;AAAhD,KAH2B,EAI3B;AAAEH,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAJ2B,CAA7B;;QAmBaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAXlB,CACP,wEADO,EAEP,6DAAaC,OAAb,CAAqBN,YAArB,CAFO,EAGP,4DAHO,CAWkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA,uBANzB,8FAMyB,EALzB,+FAKyB;AALH,kBALtB,wEAKsB,EALN,4DAKM,EAHtB,4DAGsB,CAKG;AARb,kBAMJ,4DANI;AAQa,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAZ5B,sDAY4B;eAZnB;AACRE,iBAAO,EAAE,CACP,wEADO,EAEP,6DAAaD,OAAb,CAAqBN,YAArB,CAFO,EAGP,4DAHO,CADD;AAKRQ,sBAAY,EAAE,CACZ,8FADY,EAEZ,+FAFY,CALN;AASR;AACAV,iBAAO,EAAE,CAAC,4DAAD;AAVD,S;AAYmB,Q;;;;;;;;;;;;;;;;;;AC1B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaW,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,QAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,sE;AAAA;AAAA;ACPzB;;AAA0B;;AAAQ;;AAClC;;AAAwB;;AAAM;;AAC9B;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBARJ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,yDAJO,EAKP,sEALO,EAMP,kEANO,CAQI;;;;0HAGFA,S,EAAS;AAAA,uBAhClB,4DAgCkB,EA/BlB,mEA+BkB,EA9BlB,mEA8BkB,EA7BlB,+EA6BkB,EA5BlB,yEA4BkB,EA3BlB,sEA2BkB,EA1BlB,4EA0BkB,EAzBlB,yEAyBkB,EAxBlB,uFAwBkB,EAvBlB,+DAuBkB,EAtBlB,gEAsBkB,EArBlB,6DAqBkB,EApBlB,oFAoBkB,EAnBlB,qDAmBkB,EAlBlB,yDAkBkB,EAjBlB,4EAiBkB,EAhBlB,wEAgBkB,EAflB,kEAekB,EAdlB,kEAckB;AAdH,kBAIf,uEAJe,EAKf,qEALe,EAMf,0DANe,EAOf,yDAPe,EAQf,sEARe,EASf,kEATe;AAcG,O;AALC,K;;;;;sEAKVA,S,EAAS;cAlCrB,sDAkCqB;eAlCZ;AACRN,sBAAY,EAAE,CACZ,4DADY,EAEZ,mEAFY,EAGZ,mEAHY,EAIZ,+EAJY,EAKZ,yEALY,EAMZ,sEANY,EAOZ,4EAPY,EAQZ,yEARY,EASZ,uFATY,EAUZ,+DAVY,EAWZ,gEAXY,EAYZ,6DAZY,EAaZ,oFAbY,EAcZ,qDAdY,EAeZ,yDAfY,EAgBZ,4EAhBY,EAiBZ,wEAjBY,EAkBZ,kEAlBY,EAmBZ,kEAnBY,CADN;AAuBRD,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,yDAJO,EAKP,sEALO,EAMP,kEANO,CAvBD;AA+BRQ,mBAAS,EAAE,EA/BH;AAgCRC,mBAAS,EAAE,CAAC,4DAAD;AAhCH,S;AAkCY,Q;;;;;;;;;;;;;;;;;;AC/DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACP1B;;AAAG;;AAAW;;;;;;;;sEDODA,a,EAAa;cALzB,uDAKyB;eALf;AACTN,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEN1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;QA2BaK,a;;;;;uBAAAA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,6B;AAAA,c;AAAA,a;AAAA,uD;AAAA;AAAA;;;AAtBlB;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;;;sEAeKA,a,EAAa;cAzBzB,uDAyByB;eAzBf;AACPP,kBAAQ,EAAE,UADH;AAEPQ,kBAAQ,0SAFD;AAYPC,gBAAM,EAAE;AAZD,S;AAyBe,Q;;;;;;;;;;;;;;;;;;AC5B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,c;AAJb;AAAA;;AAKI,aAAAC,KAAA,GAAM,CAAN;AACU,aAAAC,OAAA,GAAS,IAAI,0DAAJ,EAAT;AASb;;;;uCARe;AACR;AACA;AACA,eAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB;AACH;;;uCACW;AACR,eAAKD,OAAL,CAAaC,IAAb,CAAkB,KAAlB;AACH;;;;;;;uBAVQH,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA;AAAA;AAFb;;AAAI;;AAAS;;;;AAAT;;AAAA;;;;;;;;sEAELA,c,EAAc;cAJ1B,uDAI0B;eAJhB;AACPV,kBAAQ,EAAC,WADF;AAEPQ,kBAAQ;AAFD,S;AAIgB,Q;;gBAEtB;;;;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPnC;;AAAG;;AAAqB;;;;;;;;sEDOXA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTd,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAe;;;;;;;;sEDOLA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTf,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMc,WAAW,GAAS,CACtB;AAAC1B,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KADsB,CAA1B;;QAaa0B,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBATf,CACJ,4DADI,EAEJ,6DAAaC,QAAb,CAAsBF,WAAtB,CAFI,CASe;;;;0HAAdC,c,EAAc;AAAA,uBAJnB,qEAImB;AAJF,kBAJjB,4DAIiB,EAJL,4DAIK;AAIE,O;AARP,K;;;;;sEAQPA,c,EAAc;cAV1B,sDAU0B;eAVjB;AACNrB,iBAAO,EAAC,CACJ,4DADI,EAEJ,6DAAasB,QAAb,CAAsBF,WAAtB,CAFI,CADF;AAKNnB,sBAAY,EAAC,CACT,qEADS;AALP,S;AAUiB,Q;;;;;;;;;;;;;;;;;;ACjB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AASI;;AACI;;AAAG;;AAAuB;;AAC9B;;;;;;AADO;;AAAA;;;;QAIEsB,W;AAIT,2BAAoBC,SAApB,EAAuC;AAAA;;AAAnB,aAAAA,SAAA,GAAAA,SAAA;AADpB,aAAAC,KAAA,GAAM,EAAN,CACuC,CACnC;AACA;AACA;AACH;;;;kCACM;AAAA;;AACH,eAAKD,SAAL,CAAeE,KAAf,GACCzC,IADD,CACM,UAAA0C,QAAQ;AAAA,mBAAE,KAAI,CAACF,KAAL,GAAWE,QAAb;AAAA,WADd,WAEO,UAAAC,GAAG;AAAA,mBAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,WAFV;AAGH;;;;;;;uBAbQL,W,EAAW,sH;AAAA,K;;;YAAXA,W;AAAW,6B;AAAA,kFAFV,CAAC,qDAAD,CAEU,E;AAFC,c;AAAA,a;AAAA,qD;AAAA;AAAA;AAJrB;;AAAQ;AAAA,mBAAS,IAAAQ,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAG;;AAC/B;;;;AAAK;;AAAA;;;;;;;;;sEAKIR,W,EAAW;cATvB,uDASuB;eATb;AACPnB,kBAAQ,EAAE,QADH;AAEPQ,kBAAQ,+IAFD;AAOPJ,mBAAS,EAAC,CAAC,qDAAD;AAPH,S;AASa,Q;;;;;;;;;;;;;;;;;;;;;;ACdxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIawB,S;AAIT,yBAAoBC,IAApB,EAA8B;AAAA;;AAAV,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAR,KAAA,GAAO,EAAP;AACiC;;;;gCAC5B;AAAA;;AACD,iBAAO,KAAKQ,IAAL,CAAUC,GAAV,CAAc,kCAAd,EACNC,SADM,GAENlD,IAFM,CAED,UAAAmD,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WAFF,EAGNpD,IAHM,CAGD,UAAAqD,OAAO;AAAA,mBAAE,MAAI,CAACb,KAAL,GAAWa,OAAb;AAAA,WAHN,WAIA,UAAAV,GAAG;AAAA,mBAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,WAJH,CAAP;AAKH;;;;;;;uBAXQI,S,EAAS,0G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS;;;;;sEAATA,S,EAAS;cADrB;AACqB,Q;;;;;;;;;;;;;;;;;;;;;;ACJtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaO,kB;AAIX,oCAAc;AAAA;;AAHd,aAAAC,QAAA,GAAU,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAV;AACA,aAAAC,MAAA,GAAO;AAACC,cAAI,EAAC,KAAN;AAAaC,aAAG,EAAC;AAAjB,SAAP;AACA,aAAAC,OAAA,GAAQ9D,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAAR;AACiB;;;;mCAET,CACP;;;;;;;uBAPUuD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,c;AAAA;AAAA;ACP/B;;AAAG;;;;AAAgC;;AACnC;;AAAG;;;;;;AAA6B;;AAChC;;AAAG;;;;AAAmB;;AACtB;;AAAG;;;;AAAwB;;;;AAHxB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDIUA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTnC,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;AACJ;;;;;;AAFgB;;AAAA,yFAAoB,KAApB,EAAoB,aAApB;;;;QDMHwC,mB;AAMX,qCAAc;AAAA;;AALd,aAAAC,SAAA,GAAU,CACR;AAACJ,cAAI,EAAE,KAAP;AAAcC,aAAG,EAAE;AAAnB,SADQ,EAER;AAACD,cAAI,EAAE,KAAP;AAAcC,aAAG,EAAE;AAAnB,SAFQ,EAGR;AAACD,cAAI,EAAE,MAAP;AAAeC,aAAG,EAAE;AAApB,SAHQ,CAAV;AAKiB;;;;mCAET,CACP;;;2CACkBD,I,EAAY;AAC7B,cAAIK,KAAK,GAAC,KAAKD,SAAL,CAAeE,SAAf,CAAyB,UAAA/D,CAAC;AAAA,mBAAEA,CAAC,CAACyD,IAAF,KAASA,IAAX;AAAA,WAA1B,CAAV;AACA;AACA,eAAKI,SAAL,CAAeG,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;;;;;;;uBAdUF,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,2E;AAAA;AAAA;ACPhC;;;;AAAc;;;;;;;;;sEDODA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT1C,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6C,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,iC;AAAA,c;AAAA,a;AAAA,4D;AAAA;;;;;sEAAdA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT/C,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa8C,qB;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPlC;;AAAG;;AAAqB;;;;;;;;sEDOXA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACThD,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa+C,e;AANb;AAAA;;AAYI,aAAAtC,KAAA,GAAM,CAAN;AASH;;;;oCAReuC,K,EAAc;AACtB,cAAGA,KAAH,EACA,KAAKvC,KAAL,GADA,KAEK,KAAKA,KAAL;AACR;;;wCACY;AACT,eAAKwC,OAAL,CAAaxC,KAAb;AACH;;;;;;;uBAdQsC,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;oEAEb,+D,EAAc,I;;;;;;;;;;;;;;AALzB;;AAAQ;AAAA,mBAAS,IAAAG,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAa;;AAC/C;;;;;;;;;sEAESH,e,EAAe;cAN3B,uDAM2B;eANjB;AACPjD,kBAAQ,EAAC,YADF;AAEPQ,kBAAQ;AAFD,S;AAMiB,Q;;gBAEvB,uD;iBAAU,+D;;;;;;;;;;;;;;;;;;;;ACVf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6C,e;AAKX,iCAAc;AAAA;;AAFd;AACU,aAAAC,YAAA,GAAc,IAAI,0DAAJ,EAAd;AACO;;;;mCAET,CAEP;;;wCACY;AACX,eAAKA,YAAL,CAAkBzC,IAAlB,CAAuB,KAAK0B,IAA5B;AACD;;;;;;;uBAZUc,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4B;AAAA;AAAA;ACP5B;;AAAI;;AAAa;;AACjB;;AAAG;;AAAa;;AAChB;;AAAQ;AAAA,mBAAS,IAAAE,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAG;;;;AAFjC;;AAAA;;AACD;;AAAA;;;;;;;;sEDMUF,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrD,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;gBACzB;;;gBACA;;;gBAEA;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA8B;;AAAoB;;;;;;AAApB;;AAAA;;;;QDSjBsD,gB;AAGX,gCAAoBC,cAApB,EAAqD;AAAA;;AAAjC,aAAAA,cAAA,GAAAA,cAAA;AAFpB,aAAApC,KAAA,GAAQ,EAAR;AACQ,aAAAqC,GAAA,GAAM,kCAAN;AACgD;;;;mCAEhD,CACP;;;yCACgB;AACf,iBAAM,CAAC,KAAKrC,KAAL,CAAWsC,MAAlB,EACA;AACE,iBAAKtC,KAAL,GAAW,KAAKoC,cAAL,CAAoBG,MAApB,EAAX;AACD;AACF;;;;;;;uBAZUJ,gB,EAAgB,gI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,kFAFhB,CAAC,+DAAD,CAEgB,E;AAFA,c;AAAA,a;AAAA,qD;AAAA;AAAA;ACR7B;;AAAQ;AAAA,mBAAS,IAAAK,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAG;;AACtC;;;;AAAG;;AAAA;;;;;;;;;sEDSUL,gB,EAAgB;cAN5B,uDAM4B;eANlB;AACTxD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD,CAHF;AAITE,mBAAS,EAAE,CAAC,+DAAD;AAJF,S;AAMkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBa0D,c;AAGT,8BAAoBjC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAR,KAAA,GAAM,EAAN;AAEQ,aAAAqC,GAAA,GAAM,kCAAN;AADiC;;;;iCAEnC;AAAA;;AAEF,eAAK7B,IAAL,CAAUC,GAAV,CAAc,KAAK4B,GAAnB,EAAwBK,SAAxB,CAAkC,UAAAC,IAAI,EAAE;AACpCC,gBAAI,CAACC,SAAL,CAAeF,IAAf;;AACA,iBAAI,IAAIG,GAAR,IAAeH,IAAf,EAAoB;AAChB,kBAAGA,IAAI,CAACI,cAAL,CAAoBD,GAApB,CAAH,EACA;AACI,sBAAI,CAAC9C,KAAL,CAAWgD,IAAX,CAAgBL,IAAI,CAACG,GAAD,CAApB;;AACA1C,uBAAO,CAACC,GAAR,CAAYsC,IAAI,CAACG,GAAD,CAAJ,CAAUG,WAAtB;AACH;AACJ;AACJ,WATD;AAUA,iBAAO,KAAKjD,KAAZ;AAEH;;;;;;;uBAnBQyC,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACxB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaS,S;;;;;;;kCACC5D,K,EAAe6D,O,EAAgB;AACtC,cAAGA,OAAH,EAAY,OAAOC,IAAI,CAACC,IAAL,CAAU/D,KAAV,CAAP,CAAZ,KACK,OAAO8D,IAAI,CAACE,KAAL,CAAWhE,KAAX,CAAP;AACJ,gBAAM,IAAI5B,KAAJ,CAAU,yBAAV,CAAN;AACH;;;;;;;uBALQwF,S;AAAS,K;;;;YAATA,S;AAAS;;;;;sEAATA,S,EAAS;cADrB,kDACqB;eADhB;AAAChC,cAAI,EAAE;AAAP,S;AACgB,Q;;;;;;;;;;;;;;;;;;ACFtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAgBI;;AAAyD;;AAAiB;;;;;;AAC1E;;AAAsD;;AAAgB;;;;QA2B7DqC,e;AACT,+BAAoBC,aAApB,EAAgD;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAA+B;;;;iCAC1CC,U,EAAU;AACf,eAAKD,aAAL,CAAmBE,QAAnB,CAA4BD,UAA5B;AACH;;;sCACaA,U,EAAU;AACpB,eAAKD,aAAL,CAAmBG,aAAnB,CAAiCF,UAAjC,EACCjG,IADD,CACM,UAAAmD,GAAG;AAAA,mBAAEP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAF;AAAA,WADT,WAEO,UAAAR,GAAG;AAAA,mBAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,WAFV;AAGH;;;;;;;uBATQoD,e,EAAe,+H;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,kFAFd,CAAC,8DAAD,CAEc,E;AAFC,e;AAAA,c;AAAA,2hB;AAAA;AAAA;;;AAnCzB;;AAAM;AAAA;;AAAA;;AAAA,mBAAY,IAAAG,QAAA,KAAZ;AAAgC,WAAhC;;AACN;;AAQA;;AACA;;AACA;;AAAI;;AACJ;;AASA;;AAAI;;AACJ;;AACA;;AAAO;;AAAyD;;AAAQ;;AACxE;;AAAO;;AAAwD;;AAAQ;;AACvE;;AAAO;;AAAuD;;AAAQ;;AACtE;;AACA;;AACA;;AAAS;;AAAM;;AACf;;AACA;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,aAAA,KAAT;AAAkC,WAAlC;;AAAqC;;AAAI;;AACjD;;AAAG;;;;AAAH;;AACA;;AAAG;;;;AAA2B;;AAC9B;;AAAG;;;;AAA4B;;;;;;;;;;AAxB5B;;AAAA;;AACA;;AAAA;;AAa4B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAM5B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;sEAIMJ,e,EAAe;cAxC3B,uDAwC2B;eAxCjB;AACP5E,kBAAQ,EAAE,aADH;AAEPQ,kBAAQ,oqCAFD;AAsCPJ,mBAAS,EAAC,CAAC,8DAAD;AAtCH,S;AAwCiB,Q;;;;;;;;;;;;;;;;;;;;;;AC5C5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGa6E,a;AACT,6BAAoBpD,IAApB,EAA8B;AAAA;;AAAV,aAAAA,IAAA,GAAAA,IAAA;AAAa;;;;iCACxBiD,U,EAAU;AACf,cAAMpB,GAAG,GAAC,8BAAV;AACA,cAAMwB,OAAO,GAAC,IAAI,qDAAJ,CAAY;AAAC,4BAAe;AAAhB,WAAZ,CAAd;AACA,cAAMC,IAAI,GAAClB,IAAI,CAACC,SAAL,CAAeY,UAAU,CAACnE,KAA1B,CAAX;AACA,eAAKkB,IAAL,CAAUuD,IAAV,CAAe1B,GAAf,EAAoByB,IAApB,EAA0B;AAACD,mBAAO,EAAPA;AAAD,WAA1B,EACCnD,SADD,GAEClD,IAFD,CAEM,UAAAmD,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WAFT,EAGCpD,IAHD,CAGM,UAAAqD,OAAO;AAAA,mBAAET,OAAO,CAACC,GAAR,CAAYQ,OAAZ,CAAF;AAAA,WAHb;AAIAT,iBAAO,CAACC,GAAR,CAAYoD,UAAZ;AACA,gBAAM,IAAI/F,KAAJ,CAAU,kBAAV,CAAN;AACH;;;sCACa+F,U,EAAU;AACpB,cAAMpB,GAAG,GAAC,8BAAV;AACA,cAAMwB,OAAO,GAAC,IAAI,qDAAJ,CAAY;AAAC,4BAAe;AAAhB,WAAZ,CAAd;AACA,cAAMC,IAAI,GAAClB,IAAI,CAACC,SAAL,CAAeY,UAAU,CAACnE,KAA1B,CAAX;AACA,iBAAO,KAAKkB,IAAL,CAAUuD,IAAV,CAAe1B,GAAf,EAAoByB,IAApB,EAA0B;AAACD,mBAAO,EAAPA;AAAD,WAA1B,EACNnD,SADM,GAENlD,IAFM,CAED,UAAAmD,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WAFF,CAAP;AAIH;;;;;;;uBArBQgD,a,EAAa,0G;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;ACF1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAOQ;;;;QAcKI,e;AAET,+BAAoBC,EAApB,EAAqC;AAAA;;AAAjB,aAAAA,EAAA,GAAAA,EAAA;AAAmB;;;;mCAC/B;AACJ,eAAKC,UAAL,GAAkB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC5BC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADqB;AAE5BC,oBAAQ,EAAE,EAFkB;AAG5BC,mBAAO,EAAE,KAAKN,EAAL,CAAQE,KAAR,CAAc;AACnBK,oBAAM,EAAE,KADW;AAEnBC,qBAAO,EAAE,IAFU;AAGnBC,qBAAO,EAAE;AAHU,aAAd;AAHmB,WAAd,CAAlB;AASH;;;mCACU;AACPtE,iBAAO,CAACC,GAAR,CAAY,KAAK6D,UAAL,CAAgB5E,KAA5B;AACH;;;;;;;uBAhBQ0E,e,EAAe,2H;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,+b;AAAA;AAAA;AAhBxB;;AAAM;AAAA,mBAAY,IAAAN,QAAA,EAAZ;AAAsB,WAAtB;;AACF;;AACA;;AACA;;AAAI;;AACJ;;AACA;;AAAI;;AACJ;;AACI;;AAAO;;AAA8D;;AAAQ;;AAC7E;;AAAO;;AAA+D;;AAAQ;;AAC9E;;AAAO;;AAA+D;;AAAQ;;AAClF;;AACA;;AAAI;;AACJ;;AAAwC;;AAAM;;AAClD;;;;AAb+B;;AAExB;;AAAA;;AAUK;;AAAA;;;;;;;;;sEAIHM,e,EAAe;cAnB3B,uDAmB2B;eAnBjB;AACPrF,kBAAQ,EAAE,aADH;AAEPQ,kBAAQ;AAFD,S;AAmBiB,Q;;;;;;;;;;;;;;;;;;;;;;ACtB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;AACI;;AACJ;;;;;;AAGI;;AACI;;AAAG;;AAAuB;;AAC9B;;;;;;AADO;;AAAA;;;;QDAEwF,e;AAGX,iCAAc;AAAA;;AAFd,aAAAC,MAAA,GAAO,IAAP;AACA,aAAAC,SAAA,GAAU,CAAC,SAAD,EAAW,QAAX,EAAqB,OAArB,CAAV;AACiB;;;;mCAET,CACP;;;;;;;uBANUF,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,kE;AAAA;AAAA;ACN5B;;AAIA;;AACI;;AAGJ;;AACA;;AAAQ;AAAA;AAAA;;AAAyB;;AAAM;;;;AATpC;;AAKK;;AAAA;;;;;;;;;sEDCKA,e,EAAe;cAL3B,uDAK2B;eALjB;AACThG,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiG,iB;AAMX,mCAAc;AAAA;;AALd,aAAA5D,IAAA,GAAK,EAAL;AACA,aAAA6D,QAAA,GAAS,KAAT;AACA,aAAAC,SAAA,GAAU;AAACC,eAAK,EAAE,KAAR;AAAeC,kBAAQ,EAAE;AAAzB,SAAV;AACA,aAAAC,QAAA,GAAS;AAACF,eAAK,EAAE,MAAR;AAAgBC,kBAAQ,EAAE;AAA1B,SAAT;AACA,aAAAE,YAAA,GAAa;AAAEC,gBAAM,EAAE,KAAKN,QAAf;AAAyBO,gBAAM,EAAE,CAAC,KAAKP;AAAvC,SAAb;AACiB;;;;mCAET,CACP;;;;;;;uBATUD,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,oJ;AAAA;AAAA;ACP9B;;AAA+C;AAAA;AAAA;;AAA/C;;AAEA;;AAAyD;;AAAsB;;AAC/E;;AAAwC;;AAAqB;;AAC7D;;;;;;AAJ+C;;AAE3C;;AAAA;;AAAqD;;AAAA;;AACnD;;AAAA;;AAAkC;;AAAA;;AACnC;;AAAA;;;;;;;;;sEDGQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnG,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0G,gB;AAKX,gCAAoBC,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAJpB,aAAAC,WAAA,GAAY,EAAZ;AACA,aAAAC,QAAA,GAAS,EAAT;AACA,aAAAC,IAAA,GAAK,IAAL;AACA,aAAAC,SAAA,GAAU,KAAV;AACuD;;;;mCAE/C;AACN,eAAKJ,cAAL,CAAoBK,OAApB,CAA4B,QAA5B,EACCrI,IADD,CACM,UAAAmI,IAAI;AAAA,mBAAEvF,OAAO,CAACC,GAAR,CAAYsF,IAAZ,CAAF;AAAA,WADV,WAEO,UAAAxF,GAAG;AAAA,mBAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,WAFV;AAGD;;;qCACS;AAAA;;AACR,eAAKyF,SAAL,GAAe,IAAf;AACA,eAAKJ,cAAL,CAAoBK,OAApB,CAA4B,KAAKJ,WAAjC,EACCjI,IADD,CACM,UAAAmI,IAAI,EAAE;AACV,kBAAI,CAACD,QAAL,GAAc,MAAI,CAACD,WAAnB;AACA,kBAAI,CAACE,IAAL,GAAUA,IAAV;AACA,kBAAI,CAACC,SAAL,GAAe,KAAf;AACD,WALD,WAMO,UAAAzF,GAAG,EAAE;AACVC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA2F,iBAAK,CAAC,uBAAD,CAAL;AACA,kBAAI,CAACF,SAAL,GAAe,KAAf;AACA,kBAAI,CAACF,QAAL,GAAc,EAAd;AACA,kBAAI,CAACD,WAAL,GAAiB,EAAjB;AACD,WAZD;AAaD;;;qCACS;AACR,cAAG,KAAKG,SAAR,EAAkB;AAChB,mBAAO,YAAP;AACD;;AACD,iBAAO,KAAKF,QAAL,KAAgB,EAAhB,GAAoB,iBAApB,GAAuC,KAAKA,QAAL,GAAc,UAAd,GAAyB,KAAKC,IAA5E;AACD;;;;;;;uBAjCUJ,gB,EAAgB,gI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,kFAFjB,CAAC,+DAAD,CAEiB,E;AAFD,c;AAAA,a;AAAA,oG;AAAA;AAAA;ACP5B;;AAAI;;AAAgB;;AACpB;;AAA0C;AAAA;AAAA;;AAA1C;;AACA;;AACA;;AAAQ;AAAA,mBAAS,IAAAQ,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAW;;;;AAHtC;;AAAA;;AACsC;;AAAA;;;;;;;;;sEDQ7BR,gB,EAAgB;cAN5B,uDAM4B;eANlB;AACT5G,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD,CAHF;AAITE,mBAAS,EAAC,CAAC,+DAAD;AAJD,S;AAMkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaiH,c;AACT,8BAAoBxF,IAApB,EAA8B;AAAA;;AAAV,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;gCACOkF,Q,EAAgB;AACpB,cAAMrD,GAAG,GAAC,uDAAqDqD,QAArD,GAA8D,4CAAxE;AACA,iBAAO,KAAKlF,IAAL,CAAUC,GAAV,CAAc4B,GAAd,EACN3B,SADM,GAENlD,IAFM,CAED,UAAAmD,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WAFF,EAGNpD,IAHM,CAGD,UAAAqD,OAAO;AAAA,mBAAEA,OAAO,CAACoF,IAAR,CAAaN,IAAf;AAAA,WAHN,CAAP;AAIH;;;;;;;uBATQK,c,EAAc,0G;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACJ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,a;AANb;AAAA;;AAOI;AACA,aAAAC,EAAA,GAAG,OAAH;AACA,aAAAC,EAAA,GAAG,UAAH;AACA,aAAAC,QAAA,GAAU,gEAAV;AACA,aAAAC,MAAA,GAAO,KAAP;AAKH;;;;uCAHe;AACR,eAAKA,MAAL,GAAY,CAAC,KAAKA,MAAlB;AACH;;;;;;;uBATQJ,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,+E;AAAA;AAAA;ACP1B;;AAA8B;;AAAM;;AACpC;;AAAG;;AAAM;;AACT;;AACA;;AAAQ;AAAA,mBAAS,IAAAK,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAa;;;;AAHlC;;AAAkB;;AAAA;;AAC3B;;AAAA;;AACE;;AAAA;;;;;;;;sEDKQL,a,EAAa;cANzB,uDAMyB;eANf;AACPtH,qBAAW,EAAC,uBADL;AAEPD,kBAAQ,EAAE,UAFH;AAGPE,mBAAS,EAAE,CAAC,sBAAD;AAHJ,S;AAMe,Q;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;;;;;;;AAFJ;;AACI;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAzC;;AACA;;AACA;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAW;;AAC3C;;;;;;AAL6C;;AAAA;;AACrC;;AAAA;;AACwC;;AAAA;;;;;;;;AAIhD;;AAAQ;AAAA;;AAAA;;AAAA,8BAAa,IAAb;AAAiB,SAAjB;;AAAgC;;AAAW;;;;;;;;AAQ/C;;AAGI;;AAAsD;;AAAW;;AACjE;;AAAG;;AAAW;;AACd;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAG;;AACtC;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAA2C;;AAChG;;;;;;;;AAJQ;;AAAA;;AAAkD;;AAAA;;AACnD;;AAAA;;AAE8C;;AAAA;;;;;;AAPzD;;AACI;;AAQJ;;;;;;;;AARsB;;AAAA;;;;QDRT2H,c;AAiBX,gCAAc;AAAA;;AAhBd,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,GAAA,GAAM,KAAN;AACA,aAAAC,YAAA,GAAa,YAAb;AACA,aAAAC,QAAA,GAAW,CACT;AAAE9I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,QAAb;AAAuBC,YAAE,EAAE,WAA3B;AAAwCU,mBAAS,EAAE;AAAnD,SADS,EAET;AAAE/I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,OAAb;AAAsBC,YAAE,EAAE,WAA1B;AAAuCU,mBAAS,EAAE;AAAlD,SAFS,EAGT;AAAE/I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,UAAb;AAAyBC,YAAE,EAAE,WAA7B;AAA0CU,mBAAS,EAAE;AAArD,SAHS,EAIT;AAAE/I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,QAAb;AAAuBC,YAAE,EAAE,UAA3B;AAAuCU,mBAAS,EAAE;AAAlD,SAJS,EAKT;AAAE/I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,MAAb;AAAqBC,YAAE,EAAE,KAAzB;AAAgCU,mBAAS,EAAE;AAA3C,SALS,EAMT;AAAE/I,YAAE,EAAE,CAAN;AAASoI,YAAE,EAAE,SAAb;AAAwBC,YAAE,EAAE,WAA5B;AAAyCU,mBAAS,EAAE;AAApD,SANS,CAAX;AAQA,aAAAC,QAAA,GAAW;AAAE9B,eAAK,EAAE;AAAT,SAAX;AACA,aAAA+B,UAAA,GAAa;AAAE/B,eAAK,EAAE;AAAT,SAAb;AAGiB;;;;mCAET,CACP;;;kCACS;AACR,eAAK4B,QAAL,CAAcI,OAAd,CAAsB;AACpBlJ,cAAE,EAAE,KAAK8I,QAAL,CAAcvE,MAAd,GAAuB,CADP;AAEpB6D,cAAE,EAAE,KAAKM,KAFW;AAGpBL,cAAE,EAAE,KAAKM,KAHW;AAIpBI,qBAAS,EAAE;AAJS,WAAtB;AAMA,eAAKL,KAAL,GAAa,EAAb;AACA,eAAKC,KAAL,GAAa,EAAb;AACA,eAAKC,GAAL,GAAS,KAAT;AACD;;;gCACO5I,E,EAAU;AAChB,cAAMwD,KAAK,GAAC,KAAKsF,QAAL,CAAcrF,SAAd,CAAwB,UAAA/D,CAAC;AAAA,mBAAEA,CAAC,CAACM,EAAF,KAAOA,EAAT;AAAA,WAAzB,CAAZ;AACA,eAAK8I,QAAL,CAAcpF,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD;;;+BACM2F,I,EAAI,CAEV;;;;;;;uBAtCUV,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,mb;AAAA;AAAA;ACP3B;;AAOA;;AACA;;AAAI;;AACJ;;AAAsB;AAAA;AAAA;;AAClB;;AAA2B;;AAAU;;AACrC;;AAA2B;;AAAU;;AACrC;;AAA6B;;AAAY;;AAC7C;;AACA;;;;AAdK;;AAOsB;;AAAA;;AAEL;;AAAA;;AAKjB;;AAAA;;;;;;;;;sEDPQA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT7H,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMsI,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAlH,GAAG;AAAA,aAAIC,OAAO,CAACkH,KAAR,CAAcnH,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\nimport { ContactsModule } from './contacts/contacts.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routesConfig: Routes = [\n\n  { path: 'detail', component: ContactDetailComponent },\n  { path: '', redirectTo: '/contacts', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    ContactsModule,    \n    RouterModule.forRoot(routesConfig), \n    CommonModule],\n  declarations: [\n    PageNotFoundComponent,\n    ContactDetailComponent\n  ],\n  //export để hệ thống hiểu đc route-outlet\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<a routerLink=\"/contacts\">Contacts</a>\r\n<a routerLink=\"/detail\">Detail</a>\r\n<router-outlet></router-outlet>\r\n<!-- <app-sign-up></app-sign-up> -->\r\n<!-- <app-sign-in></app-sign-in> -->\r\n<!-- <app-weather></app-weather> -->\r\n<!-- <app-ip></app-ip> -->\r\n<!-- <app-learn-pipe></app-learn-pipe> -->\r\n<!-- <app-card>\r\n    <h2 class=\"card-header\">Hai nguyen</h2>\r\n    <p class=\"card-body\">Dep trai</p>\r\n</app-card>\r\n<app-card>\r\n    <h2 class=\"card-header\">Hai nguyen</h2>\r\n    <p class=\"card-body\">Sieu Dep trai</p>\r\n</app-card> -->","import { SignUpComponent } from './sign-up.component';\nimport { SignInComponent } from './sign-in.component';\nimport { IpComponent } from './ip.component';\nimport { RoundPipe } from './round.pipe';\nimport { CardComponent } from './card.component';\nimport { ParentComponent } from './paren.component';\nimport { ChildComponent } from './child.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {WordComponent} from './word/word.component';\nimport { BookComponent } from './book/book.component';\nimport { UserformComponent } from './userform/userform.component';\nimport { StructComponent } from './struct/struct.component';\nimport { WordsComponent } from './words/words.component';\nimport { HttpModule }from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ProjectComponent } from './project/project.component';\nimport { PersonComponent } from './person/person.component';\nimport { ListPersonComponent } from './list-person/list-person.component';\nimport { LearnPipeComponent } from './learn-pipe/learn-pipe.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { LogInComponent } from './log-in/log-in.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WordComponent,\n    BookComponent,\n    UserformComponent,\n    StructComponent,\n    WordsComponent,\n    ProjectComponent,\n    PersonComponent,\n    ListPersonComponent,\n    ChildComponent,\n    ParentComponent,\n    CardComponent,\n    LearnPipeComponent,\n    RoundPipe,\n    IpComponent,\n    WeatherComponent,\n    LogInComponent,\n    SignInComponent,\n    SignUpComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>book works!</p>\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-card',\r\n    template: `\r\n        <div class=\"card\">\r\n            <div class=\"header\">\r\n                <ng-content select=\".card-header\"></ng-content>\r\n            </div>\r\n            <div class=\"body\">\r\n                <ng-content select=\".card-body\"></ng-content>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .card {\r\n            padding: 5px;\r\n            margin: 5px;\r\n            background: #fff;\r\n            border-radius: 2px;\r\n            display: inline-block;\r\n            width: 300px;\r\n            box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\r\n        }\r\n    `]\r\n})\r\n\r\nexport class CardComponent {}\r\n","import {Component, EventEmitter, Output} from \"@angular/core\";\r\n@Component({\r\n    selector:'app-child',\r\n    template:`<h3>{{value}}</h3>`\r\n})\r\nexport class ChildComponent{\r\n    value=0;\r\n    @Output() myclick= new EventEmitter<boolean>();\r\n    addForParent(){\r\n        //truyền tham số từ child ra parent\r\n        //khi click button add sẽ thực hiện myClick ra output\r\n        this.myclick.emit(true);\r\n    }\r\n    subForParent(){\r\n        this.myclick.emit(false);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contacts works!</p>\n","import { ContactsComponent } from './contacts.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nconst routeConfig: Routes=[\r\n    {path: 'contacts', component: ContactsComponent}\r\n]\r\n@NgModule({\r\n    imports:[\r\n        CommonModule,\r\n        RouterModule.forChild(routeConfig)\r\n    ],\r\n    declarations:[\r\n        ContactsComponent\r\n    ]\r\n    \r\n})\r\nexport class ContactsModule{}","import { Component } from '@angular/core';\r\nimport {Http} from '@angular/http'\r\nimport 'rxjs/add/operator/toPromise'\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\nimport { IpService } from './ip.service';\r\n@Component({\r\n    selector: 'app-ip',\r\n    template: `\r\n    <button (click)='getData()'>Get</button>\r\n    <div *ngFor='let project of items'>\r\n        <p>{{project.projectName}}</p>\r\n    </div>`,\r\n    providers:[IpService]\r\n})\r\nexport class IpComponent{\r\n    projectName: String;\r\n    ip: string;\r\n    items=[];\r\n    constructor(private ipService:IpService){\r\n        // this.ipService.getIp()\r\n        // .then(projects=>this.items=projects)\r\n        // .catch(err=>console.log(err));\r\n    }\r\n    getData(){\r\n        this.ipService.getIp()\r\n        .then(projects=>this.items=projects)\r\n        .catch(err=>console.log(err));\r\n    }   \r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class IpService{\r\n    ip: string;\r\n    projectName: String;\r\n    items =[];\r\n    constructor(private http: Http){}\r\n    getIp(){\r\n        return this.http.get('https://localhost:44342/projects')\r\n        .toPromise()\r\n        .then(res=>res.json())\r\n        .then(resJson=>this.items=resJson)\r\n        .catch(err=>console.log(err));\r\n    }\r\n    \r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-learn-pipe',\n  templateUrl: './learn-pipe.component.html',\n  styleUrls: ['./learn-pipe.component.css']\n})\nexport class LearnPipeComponent implements OnInit {\n  birthday =new Date(2019, 3, 4);\n  person={name:'Hai', age:19};\n  address=Promise.resolve('Thường tín, Hà Nội'); \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{birthday | date: 'shortTime'}}</p>\n<p>{{person | json | uppercase}}</p>\n<p>{{address | async}}</p>\n<p>{{3.5 | roundNum: true}}</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-person',\n  templateUrl: './list-person.component.html',\n  styleUrls: ['./list-person.component.css']\n})\nexport class ListPersonComponent implements OnInit {\n  arrPeople=[\n    {name: 'hai', age: 18},\n    {name: 'huy', age: 19},\n    {name: 'kien', age: 20}\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  removePersonByName(name: string){\n    var index=this.arrPeople.findIndex(e=>e.name===name);\n    debugger\n    this.arrPeople.splice(index, 1);\n  }\n\n}\n","<ng-container *ngFor='let person of arrPeople'>\n    <app-person [name]='person.name' [age]='person.age' (removePerson)='removePersonByName($event)'>\n    </app-person>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { ChildComponent } from './child.component';\r\nimport {Component, ViewChild} from \"@angular/core\";\r\n@Component({\r\n    selector:'app-parent',\r\n    template:`  \r\n    <button (click)='onAddForChild()'>Add for Child</button>\r\n    <app-child #child></app-child>`\r\n})\r\nexport class ParentComponent{\r\n    //khai báo một viewchild commponent\r\n    @ViewChild(ChildComponent)\r\n\r\n    //khởi tạo một biến myChild đại diện cho ChildComponent\r\n    myChild: ChildComponent;\r\n    value=0;\r\n    changeValue(isAdd: boolean){\r\n        if(isAdd)\r\n        this.value++;\r\n        else this.value--;\r\n    }\r\n    onAddForChild(){\r\n        this.myChild.value++;\r\n    }\r\n}\r\n//#child ở đây đại diện cho app-child\r\n//app-child chứa một trường là value\r\n//child có thể truy cập và trường value này và thay đổi giá trị","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n  @Input() name: string;\n  @Input() age: number;\n  //removePerson phải giống với tên sự kiện trong ParentComponent\n  @Output() removePerson= new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n  removeByClick(){\n    this.removePerson.emit(this.name);\n  }\n\n}\n","<h3>Tên: {{name}}</h3>\n<p>Tuổi: {{age}}</p>\n<button (click)='removeByClick()'>Xoa</button>","import { HttpClient } from '@angular/common/http';\nimport { ProjectService } from './project.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css'],\n  providers: [ProjectService]\n})\nexport class ProjectComponent implements OnInit {\n  items = [];\n  private url = \"https://localhost:44342/projects\";\n  constructor(private projectService : ProjectService) { }\n\n  ngOnInit(): void {\n  }\n  getAllProjects() {\n    while(!this.items.length)\n    {\n      this.items=this.projectService.getAll();\n    }\n  }\n}\n","<button (click)='getAllProjects()'>Get</button>\r\n<p *ngFor=\"let item of items\">{{item.projectname}}</p>","import { Observable } from 'rxjs/Observable';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\ninterface Projects {\r\n    projectMs: [],\r\n    state: [],\r\n    user: [],\r\n    projects2Users: [],\r\n    tasks: [],\r\n    projectId: number,\r\n    projectDesc: string,\r\n    projectName: string,\r\n    projectDeadline: Date,\r\n    projectType: string,\r\n    projectFile: string,\r\n    stateId: number,\r\n    commentFile: string,\r\n    createdDate: Date,\r\n    createdBy: number\r\n}\r\n@Injectable()\r\nexport class ProjectService {\r\n    result: any;\r\n    items=[];\r\n    constructor(private http: HttpClient) { }\r\n    private url = \"https://localhost:44342/projects\";\r\n    getAll(){\r\n        \r\n        this.http.get(this.url).subscribe(data=>{\r\n            JSON.stringify(data);\r\n            for(let key in data){\r\n                if(data.hasOwnProperty(key))\r\n                {\r\n                    this.items.push(data[key]);\r\n                    console.log(data[key].projectName);\r\n                }\r\n            }  \r\n        });\r\n        return this.items;\r\n        \r\n    }\r\n\r\n}","import {Pipe, PipeTransform} from '@angular/core'\r\n@Pipe({name: 'roundNum'})\r\nexport class RoundPipe implements PipeTransform{\r\n    transform(value: number, isUpper: boolean):number {\r\n       if(isUpper) return Math.ceil(value);\r\n       else return Math.floor(value);\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n} ","import { SignInService } from './sign-in.service';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Component } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\n@Component({\r\n    selector: 'app-sign-in',\r\n    template:`\r\n    <form (ngSubmit)=\"onSubmit(formSignIn);\" #formSignIn=\"ngForm\">\r\n    <input \r\n    placeholder=\"Email\" \r\n    ngModel\r\n    name=\"email\" \r\n    #txtEmail=\"ngModel\"\r\n    required\r\n    email\r\n    >\r\n    <p *ngIf=\"txtEmail.touched && txtEmail.errors?.required\">Email is required</p>\r\n    <p *ngIf=\"txtEmail.touched && txtEmail.errors?.email\">Email is invalid</p>\r\n    <br><br>\r\n    <input \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        ngModel \r\n        name=\"password\" \r\n        #txtPassword=\"ngModel\"\r\n        minlength=\"6\"\r\n        pattern=\"[a-z]*\"\r\n    >  \r\n    <br><br>\r\n    <div ngModelGroup=\"subjects\">\r\n    <label><input type=\"checkbox\"  [ngModel]=\"false\" name=\"Angular\">Football</label>\r\n    <label><input type=\"checkbox\"  [ngModel]=\"false\" name=\"Nodejs\">Football</label>\r\n    <label><input type=\"checkbox\"  [ngModel]=\"false\" name=\"React\">Football</label>\r\n    </div>\r\n    <br>\r\n    <button >Submit</button>\r\n    </form>\r\n    <button (click)='postToExpress(formSignIn);'>POST</button>\r\n    <p>{{txtPassword.errors | json}}\r\n    <p>{{txtEmail.errors | json }}</p>\r\n    <p>{{formSignIn.value | json }}</p>\r\n    `,\r\n    providers:[SignInService]\r\n})\r\nexport class SignInComponent{\r\n    constructor(private signInService: SignInService){}\r\n    onSubmit(formSignIn){\r\n        this.signInService.onSubmit(formSignIn);\r\n    }\r\n    postToExpress(formSignIn){\r\n        this.signInService.postToExpress(formSignIn)\r\n        .then(res=>console.log(res))\r\n        .catch(err=>console.log(err));\r\n    }\r\n}","import { Http, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class SignInService{\r\n    constructor(private http: Http){}\r\n    onSubmit(formSignIn){\r\n        const url='http://localhost:3000/signin';\r\n        const headers=new Headers({'Content-Type':'application/json'});\r\n        const body=JSON.stringify(formSignIn.value);\r\n        this.http.post(url, body, {headers})\r\n        .toPromise()\r\n        .then(res=>res.json())\r\n        .then(resJson=>console.log(resJson));\r\n        console.log(formSignIn);\r\n        throw new Error(\"Email is invalid\");\r\n    }\r\n    postToExpress(formSignIn){\r\n        const url='http://localhost:3000/signin';\r\n        const headers=new Headers({'Content-Type':'application/json'});\r\n        const body=JSON.stringify(formSignIn.value);\r\n        return this.http.post(url, body, {headers})\r\n        .toPromise()\r\n        .then(res=>res.json());\r\n\r\n    }\r\n}","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n@Component({\r\n    selector: 'app-sign-up',\r\n    template: `\r\n    <form (ngSubmit)=\"onSubmit();\" [formGroup]=\"formSignUp\">\r\n        <input placeholder=\"Email\" formControlName='email'>\r\n        <p *ngIf=\"formSignUp.get('email').invalid && formSignUp.get('email').touched\"></p>\r\n        <br><br>\r\n        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n        <br><br>\r\n        <div formGroupName=\"subject\">\r\n            <label><input formControlName='nodeJS' type=\"checkbox\" name=\"NodeJs\">NodeJs  </label>\r\n            <label><input formControlName='angular' type=\"checkbox\" name=\"NodeJs\">Angular </label>\r\n            <label><input formControlName='reactJS' type=\"checkbox\" name=\"NodeJs\">Reactjs </label>\r\n        </div>\r\n        <br><br>\r\n        <button [disabled]='formSignUp.invalid'>Submit</button>\r\n    </form>\r\n    `\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n    formSignUp: FormGroup;//cần gán vào formGroup\r\n    constructor(private fb: FormBuilder) {}\r\n    ngOnInit(): void {\r\n        this.formSignUp = this.fb.group({\r\n            email: ['', Validators.required],\r\n            password: '',\r\n            subject: this.fb.group({\r\n                nodeJS: false,\r\n                angular: true,\r\n                reactJS: false\r\n            })\r\n        })\r\n    }\r\n    onSubmit() {\r\n        console.log(this.formSignUp.value);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-struct',\n  templateUrl: './struct.component.html',\n  styleUrls: ['./struct.component.css']\n})\nexport class StructComponent implements OnInit {\n  isShow=true;\n  arrStruct=['angular','nodejs', 'react'];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- ngIf có tác dụng ẩn hiện các element -->\n<p *ngIf=\"isShow\">\n    struct works!\n</p>\n<!-- ngFor dùng để duyệt một mảng trong với cấu trúc: let <tên biến đại diên một phần tử của mảng> of <tên mảng> -->\n<ul>\n    <li *ngFor='let subject of arrStruct'>\n        <p>{{'Subject: '+subject}}</p>\n    </li>\n</ul>\n<button (click)=\"isShow=!isShow\">Toggle</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userform',\n  templateUrl: './userform.component.html',\n  styleUrls: ['./userform.component.css']\n})\nexport class UserformComponent implements OnInit {\n  name='';\n  isCircle=false;\n  evenStyle={color: 'red', fontSize: '40px'};\n  oddStyle={color: 'blue', fontSize: '20px'};\n  currentClass={ circle: this.isCircle, square: !this.isCircle}\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  // showEvent(event){\n  //   this.name=event.target.value;\n  // }\n\n}\n","<input type=\"text\" placeholder=\"type username\" [(ngModel)]=\"name\" #txtUserName/>\n<!-- attribute directive gồm ngStyle và ngClas -->\n<h3 [ngStyle]=\"name.length %2===0? evenStyle : oddStyle\">your name is: {{name}}</h3>\n<code [style.color]=\"name?'red':'blue'\">{{txtUserName.value}}</code>\n<div [ngClass]=\"currentClass\"></div>","import { WeatherService } from './weather.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers:[WeatherService]\n})\nexport class WeatherComponent implements OnInit {\n  txtCityName='';\n  cityName='';\n  temp=null;\n  isLoading=false;\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n    this.weatherService.getTemp('London')\n    .then(temp=>console.log(temp))\n    .catch(err=>console.log(err));\n  }\n  getWeather(){\n    this.isLoading=true;\n    this.weatherService.getTemp(this.txtCityName)\n    .then(temp=>{\n      this.cityName=this.txtCityName;\n      this.temp=temp;\n      this.isLoading=false;\n    })\n    .catch(err=>{\n      console.log(err)\n      alert('Cannot find your city');\n      this.isLoading=false;\n      this.cityName='';\n      this.txtCityName='';\n    });\n  }\n  getMessage(){\n    if(this.isLoading){\n      return 'Loading...';\n    }\n    return this.cityName===''? 'Enter city name':(this.cityName+' is now '+this.temp);\n  }\n\n}\n","<h3>{{getMessage()}}</h3>\n<input placeholder=\"Enter your city name\" [(ngModel)]='txtCityName'>\n<br>\n<button (click)='getWeather()'>Get weather</button>","import { Http } from '@angular/http';\r\nimport {Injectable} from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\n@Injectable()\r\nexport class WeatherService{\r\n    constructor(private http: Http){\r\n    }\r\n    getTemp(cityName: string){\r\n        const url='https://api.openweathermap.org/data/2.5/weather?q='+cityName+',uk&appid=78f2d4990f1ba6a476131b27893c1dd0';\r\n        return this.http.get(url)\r\n        .toPromise()\r\n        .then(res=>res.json())\r\n        .then(resJson=>resJson.main.temp);\r\n    }\r\n}","import {Component} from '@angular/core';\r\n@Component({\r\n    templateUrl:'./word.component.html',\r\n    selector: 'app-word',\r\n    styleUrls: ['./word.component.css']\r\n\r\n})\r\nexport class WordComponent{\r\n    //tự hiểu kiểu của một biến\r\n    en='Hello';\r\n    vn='Xin chao';\r\n    imageUrl= 'https://angular.io/assets/images/logos/angular/logo-nav@2x.png';\r\n    forgot=false;\r\n    \r\n    toggleForgot(){\r\n        this.forgot=!this.forgot;\r\n    }\r\n}","<a href=\"#\" [hidden]=\"forgot\">{{en}}</a>\r\n<p>{{vn}}</p>\r\n<img [src]=\"imageUrl\" alt=\"\">\r\n<button (click)=\"toggleForgot()\">toggle forgot</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-words',\n  templateUrl: './words.component.html',\n  styleUrls: ['./words.component.css']\n})\nexport class WordsComponent implements OnInit {\n  txtEn = '';\n  txtVn = '';\n  add = false;\n  filterStatus='XEM_TAT_CA';\n  arrWords = [\n    { id: 1, en: 'action', vn: 'hành động', memorized: true },\n    { id: 2, en: 'actor', vn: 'diễn viên', memorized: false },\n    { id: 3, en: 'activity', vn: 'hoạt động', memorized: true },\n    { id: 4, en: 'active', vn: 'chủ động', memorized: true },\n    { id: 5, en: 'bath', vn: 'tắm', memorized: false },\n    { id: 6, en: 'bedroom', vn: 'phòng ngủ', memorized: true }\n  ];\n  colorRed = { color: 'red' };\n  colorGreen = { color: 'green' };\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  addWord() {\n    this.arrWords.unshift({\n      id: this.arrWords.length + 1,\n      en: this.txtEn,\n      vn: this.txtVn,\n      memorized: false\n    });\n    this.txtEn = '';\n    this.txtVn = '';\n    this.add=false;\n  }\n  delWord(id: number){\n    const index=this.arrWords.findIndex(e=>e.id===id);\n    this.arrWords.splice(index, 1);\n  }\n  select(word){\n    \n  }\n\n\n}\n","<div *ngIf=\"add\">\n    <input type=\"text\" placeholder=\"English\" [(ngModel)]=\"txtEn\" />\n    <br *ngIf=\"add\">\n    <input type=\"text\" placeholder=\"Vietnamese\" [(ngModel)]=\"txtVn\" />\n    <br>\n    <button (click)='addWord()'>Thêm từ mới</button>\n</div>\n<button (click)='add=true' *ngIf=\"!add\">Thêm từ mới</button>\n<br><br>\n<select name=\"\" id=\"\" [(ngModel)]=\"filterStatus\">\n    <option value=\"XEM_TAT_CA\">Xem tất cả</option>\n    <option value=\"XEM_DA_NHO\">Xem đã nhớ</option>\n    <option value=\"XEM_CHUA_NHO\">Xem chưa nhớ</option>\n</select>\n<div *ngFor='let word of arrWords'>\n    <div class=\"word\" *ngIf=\"(filterStatus==='XEM_TAT_CA') || \n    (filterStatus==='XEM_DA_NHO'&& word.memorized) ||\n    (filterStatus==='XEM_CHUA_NHO' && !word.memorized)\">\n        <h4 [ngStyle]=\" word.memorized?colorGreen: colorRed \">{{word.en}}</h4>\n        <p>{{word.vn}}</p>\n        <button (click)=\"delWord(word.id)\">Xóa</button>\n        <button (click)=\"word.memorized=!word.memorized\">{{word.memorized?'Chưa thuộc': 'Đã thuộc'}}</button>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}